name: "Terraform"

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Action to Perform"
        required: true
        type: choice
        options:
          - plan
          - apply
      product:
        description: "Template Name to Deploy"
        required: true
        type: choice
        options:
          - base-networking
          - setu-app

env:
  APPROVAL_LIST: pratikbhawsar26
  AWS_REGION : "us-east-1"

permissions:
  id-token: write
  contents: read

jobs:
  detect:
    name: Started ${{ github.event.inputs.action }} for ${{ github.event.inputs.product }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
        
      - name: Select env on Workflow Dispatch
        id: branch_check
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "::set-output name=env_name::stage"
          elif [ "${{ github.ref }}" = "refs/heads/stage" ]; then
            echo "::set-output name=env_name::stage"
          elif [ "${{ github.ref }}" = "refs/heads/prod" ]; then
            echo "::set-output name=env_name::prod"
          else
            echo "::set-output name=env_name::None"
          fi
          echo "Running on product ${{ github.event.inputs.product }}"
          echo "::set-output name=product::${{ github.event.inputs.product }}"
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}
      product: ${{ steps.branch_check.outputs.product }}
      
      
  terraform:
    needs: detect
    name: terraform-pipeline
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment:
      name: stage
    env:
      TF_IN_AUTOMATION: true
    defaults:
      run:
        working-directory: "./${{ needs.detect.outputs.product }}"
    steps:
      - name: Codebase Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.0

      - name: Deployment Details
        run: |
          echo "Product: ${{ needs.detect.outputs.product }}"
          echo "Directory: ${{ needs.detect.outputs.product }}"

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.SETU_APP_TF_ROLE }}
          role-session-name: tfrolesession
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        if: ( github.event_name == 'pull_request' && steps.fmt.outcome == 'success' ) || github.event_name == 'workflow_dispatch'
        id: init
        run: terraform init

      - name: Post init exit gate
        if: (github.event_name == 'workflow_dispatch' && steps.init.outcome == 'failure')
        run: exit 1

      - name: Terraform Validate
        if: (github.event_name == 'workflow_dispatch' && steps.init.outcome == 'success')
        id: validate
        run: terraform validate

      - name: Post validate exit gate
        if: (github.event_name == 'workflow_dispatch' && steps.validate.outcome == 'failure')
        run: exit 1

      - name: Terraform Plan
        if: ( github.event_name == 'pull_request' && steps.validate.outcome == 'success' ) || github.event_name == 'workflow_dispatch'
        run: |
          if [[ '${{ github.event_name }}' == 'pull_request' ]]; then
            terraform plan -out workspace.plan -input=false -lock=false
          else
            terraform plan -var="username=${{ secrets.DBUSERNAME }}" -var="password=${{ secrets.DBPASSWORD }}" -out workspace.plan -input=false
          fi

      - name: Terraform Plan Show
        if: ( github.event_name == 'pull_request' && steps.validate.outcome == 'success' ) || github.event_name == 'workflow_dispatch'
        id: plan
        run: terraform show workspace.plan

      - name: "Terraform Approval"
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
        uses: macnev2013/manual-approval@v1.0.18
        with:
          secret: ${{ secrets.GH_TOKEN }}
          approvers: ${{ env.APPROVAL_LIST }}
          approval-wait: 300
          minimum-approvals: 1

      - name: Terraform apply
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply'
        run: terraform apply --auto-approve -input=false workspace.plan 
